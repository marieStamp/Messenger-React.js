{"version":3,"sources":["store/messages/actions.jsx","services/firebase.js","store/chats/actions.jsx","utils/constants.jsx","store/messages/reducer.jsx","store/profile/actions.jsx","store/profile/reducer.jsx","store/chats/reducer.jsx","store/food/actions.jsx","store/food/reducer.jsx","store/index.jsx","components/ChatItem/ChatItem.jsx","store/chats/selectors.jsx","components/ChatsList/ChatsList.jsx","components/SignForm/SignForm.jsx","components/Home/Home.jsx","store/profile/selectors.jsx","components/Profile/Profile.jsx","components/Form/Form.jsx","components/MessagesList/MessagesList.jsx","components/Chats/Chats.jsx","store/food/selectors.jsx","components/Food/Food.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","components/SignUp/SignUp.jsx","components/Router/Router.jsx","App.js","index.js"],"names":["timeout","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","signUp","email","pass","a","createUserWithEmailAndPassword","logIn","signInWithEmailAndPassword","logOut","signOut","db","getDatabase","userRef","ref","chatsRef","messagesRef","getChatRefById","id","ADD_CHAT","DELETE_CHAT","SET_CHATS","addChatWithFb","newChat","dispatch","chatId","set","empty","initChatsTracking","onValue","chatsSnap","console","log","newChats","forEach","snapshot","push","val","chats","type","payload","setChats","AUTHORS","REQUEST_STATUS","ADD_MESSAGE","DELETE_MESSAGE","addMessage","message","initialMessages","TOGGLE_CHECKBOX","CHANGE_NAME","SIGN_IN","SIGN_OUT","toggleCheckbox","initialState","checkbox","name","authed","initialChats","REQUEST_FOOD_LOADING","REQUEST_FOOD_FAILURE","REQUEST_FOOD_SUCCESS","foodList","request","status","error","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","config","key","storage","blacklist","persistedReducer","persistReducer","combineReducers","state","filter","profile","action","messages","nextMessages","idToDelete","food","store","createStore","applyMiddleware","thunk","persistor","persistStore","ChatItem","chat","useDispatch","ListItem","className","style","color","isActive","to","onClick","selectChats","ChatsList","chatsList","useSelector","useState","value","setValue","useEffect","map","onSubmit","e","preventDefault","newId","uuidv4","TextField","onChange","target","SignForm","loading","setEmail","setPass","disabled","Home","setError","setLoading","handleSignIn","selectName","selectAuth","ConnectedProfile","connect","checkboxValue","changeChecked","setName","newName","showName","shallowEqual","userData","handleLogOutClick","checked","Form","onSend","inputRef","useRef","current","focus","author","text","label","variant","Button","sx","m","endIcon","MessagesList","Chats","msgs","sendMessage","useParams","handleSend","useCallback","nextMessage","getChatMsgsListRefById","replace","mapDispatchToProps","clearTimeout","setTimeout","ChatBotMessage","ConnectedChats","selectFoodList","selectFoodLoading","selectFoodError","Food","isLoading","requestFood","fetch","response","ok","Error","json","result","err","CircularProgress","fd","PrivateRoute","children","PublicOutlet","SignUp","handleSignUp","Router","setMsgs","unsubscribe","onAuthStateChanged","user","newMsgs","chatMsgsSnap","Object","values","messagesList","path","element","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bc33d1a.chunk.js","sourcesContent":["import { AUTHORS } from \"../../utils/constants\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const ADD_MESSAGE = \"MESSAGES::ADD_MESSAGE\";\r\nexport const DELETE_MESSAGE = \"MESSAGES::DELETE_MESSAGE\";\r\n\r\nexport const addMessage = (chatId, message) => ({\r\n  type: ADD_MESSAGE,\r\n  payload: { chatId, message },\r\n});\r\n\r\nexport const deleteMessage = (chatId, idToDelete) => ({\r\n  type: DELETE_MESSAGE,\r\n  payload: {\r\n    chatId,\r\n    idToDelete,\r\n  },\r\n});\r\n\r\nlet timeout;\r\n\r\nexport const addMessageWithReply = (chatId, message) => (dispatch) => {\r\n  dispatch(addMessage(chatId, message));\r\n  if (message.author !== AUTHORS.ChatBot) {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    timeout = setTimeout(() => {\r\n      const ChatBotMessage = {\r\n        author: AUTHORS.ChatBot,\r\n        id: uuidv4(),\r\n        text: \"We answer You in a minute, please, wait!\",\r\n      };\r\n      dispatch(addMessage(chatId, ChatBotMessage));\r\n    }, 3000);\r\n  }\r\n};\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getAuth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n  } from \"firebase/auth\";\r\n  import { getDatabase, ref } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD4NhO2foNc0OYJB6Y4rbnKrVmT1bq5bKc\",\r\n  authDomain: \"gb-reactjs-33905.firebaseapp.com\",\r\n  projectId: \"gb-reactjs-33905\",\r\n  storageBucket: \"gb-reactjs-33905.appspot.com\",\r\n  messagingSenderId: \"903813555749\",\r\n  appId: \"1:903813555749:web:cc34c787a3177aa0b041cc\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const signUp = async (email, pass) =>\r\n  await createUserWithEmailAndPassword(auth, email, pass);\r\nexport const logIn = async (email, pass) =>\r\n  await signInWithEmailAndPassword(auth, email, pass);\r\nexport const logOut = async () => await signOut(auth);\r\nexport const db = getDatabase(app);\r\nexport const userRef = ref(db, 'user');\r\nexport const chatsRef = ref(db, 'chats');\r\nexport const messagesRef = ref(db, 'messages');\r\nexport const getChatRefById = (id) => ref(db, `chats/${id}`);\r\nexport const getChatMsgsListRefById = (chatId) => ref(db, `messages/${chatId}/messagesList`);\r\nexport const getChatMsgsRefById = (chatId) => ref(db, `messages/${chatId}`);","import { onValue, set } from \"firebase/database\";\r\nimport {\r\n  chatsRef,\r\n  getChatMsgsRefById,\r\n  getChatRefById,\r\n} from \"../../services/firebase\";\r\n\r\nexport const ADD_CHAT = \"CHATS::ADD_CHAT\";\r\nexport const DELETE_CHAT = \"CHATS::DELETE_CHAT\";\r\nexport const SET_CHATS = \"CHATS::SET_CHATS\";\r\n\r\nexport const addChat = (newChat) => ({\r\n  type: ADD_CHAT,\r\n  payload: newChat,\r\n});\r\n\r\nexport const deleteChat = (id) => ({\r\n  type: DELETE_CHAT,\r\n  payload: {\r\n    chatId: id,\r\n  },\r\n});\r\n\r\nexport const addChatWithFb = (newChat) => (dispatch) => {\r\n  set(getChatMsgsRefById(newChat.id), { empty: true });\r\n  set(getChatRefById(newChat.id), newChat);\r\n};\r\n\r\nexport const deleteChatWithFb = (chatId) => (dispatch) => {\r\n  getChatRefById(chatId.id).remove();\r\n};\r\n\r\nexport const setChats = (chats) => ({\r\n  type: SET_CHATS,\r\n  payload: chats,\r\n});\r\n\r\nexport const initChatsTracking = () => (dispatch) => {\r\n  onValue(chatsRef, (chatsSnap) => {\r\n    console.log(chatsSnap);\r\n    const newChats = [];\r\n\r\n    chatsSnap.forEach((snapshot) => {\r\n      newChats.push(snapshot.val());\r\n    });\r\n\r\n    dispatch(setChats(newChats));\r\n  });\r\n};\r\n","export const AUTHORS = {\r\n  User: \"User\",\r\n  ChatBot: \"ChatBot\",\r\n};\r\n\r\nexport const apiUrl = \"https://api.openbrewerydb.org/breweries\";\r\n\r\nexport const REQUEST_STATUS = {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  SUCCESS: 2,\r\n  FAILURE: 3,\r\n};\r\n","import { ADD_CHAT, DELETE_CHAT } from \"../chats/actions\";\r\nimport { ADD_MESSAGE, DELETE_MESSAGE } from \"./actions\";\r\n\r\nconst initialMessages = {};\r\n\r\nexport const messagesReducer = (state = initialMessages, { payload, type }) => {\r\n  switch (type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        [payload.chatId]: [...state[payload.chatId], payload.message],\r\n      };\r\n    case DELETE_MESSAGE: {\r\n      const nextMessages = { ...state };\r\n      nextMessages[payload.chatId] = nextMessages[payload.chatId].filter(\r\n        ({ id }) => id !== payload.idToDelete\r\n      );\r\n\r\n      return nextMessages;\r\n    }\r\n\r\n    case ADD_CHAT:\r\n      return {\r\n        ...state,\r\n        [payload.id]: [],\r\n      };\r\n    case DELETE_CHAT: {\r\n      const nextMessages = { ...state };\r\n      delete nextMessages[payload.chatId];\r\n\r\n      return nextMessages;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const TOGGLE_CHECKBOX = \"PROFILE::TOGGLE_CHECKBOX\";\r\nexport const CHANGE_NAME = \"PROFILE::CHANGE_NAME\";\r\nexport const SIGN_IN = \"PROFILE::SIGN_IN\";\r\nexport const SIGN_OUT = \"PROFILE::SIGN_OUT\";\r\n\r\nexport const toggleCheckbox = {\r\n  type: TOGGLE_CHECKBOX,\r\n};\r\n\r\nexport const changeName = (name) => ({\r\n  type: CHANGE_NAME,\r\n  payload: name,\r\n});\r\n\r\nexport const signIn = () => ({\r\n  type: SIGN_IN,\r\n});\r\n\r\nexport const signOut = () => ({\r\n  type: SIGN_OUT,\r\n});\r\n","import { TOGGLE_CHECKBOX, CHANGE_NAME, SIGN_IN, SIGN_OUT } from \"./actions\";\r\n\r\nconst initialState = {\r\n  checkbox: false,\r\n  name: \"default name\",\r\n  authed: false,\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CHECKBOX:\r\n      return {\r\n        ...state,\r\n        checkbox: !state.checkbox,\r\n      };\r\n    case CHANGE_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n      };\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        authed: true,\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        authed: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_CHAT, DELETE_CHAT, SET_CHATS } from \"./actions\";\r\n\r\nconst initialChats = [];\r\n\r\nexport const chatsReducer = (state = initialChats, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_CHAT:\r\n      return [...state, payload];\r\n    case DELETE_CHAT:\r\n      return state.filter(({ id }) => id !== payload.chatId);\r\n    case SET_CHATS:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { apiUrl } from \"../../utils/constants\";\r\n\r\nexport const REQUEST_FOOD_LOADING = \"FOOD::REQUEST_LOADING\";\r\nexport const REQUEST_FOOD_FAILURE = \"FOOD::REQUEST_FAILURE\";\r\nexport const REQUEST_FOOD_SUCCESS = \"FOOD::REQUEST_SUCCESS\";\r\n\r\nexport const getFoodLoading = () => ({\r\n  type: REQUEST_FOOD_LOADING,\r\n});\r\nexport const getFoodSuccess = (food) => ({\r\n  type: REQUEST_FOOD_SUCCESS,\r\n  payload: food,\r\n});\r\nexport const getFoodFailure = (err) => ({\r\n  type: REQUEST_FOOD_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nexport const getFood = () => async (dispatch) => {\r\n  dispatch(getFoodLoading());\r\n\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    console.log(response);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"not ok\");\r\n    }\r\n\r\n    const result = await response.json();\r\n\r\n    dispatch(getFoodSuccess(result));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(getFoodFailure(err.message));\r\n  }\r\n};\r\n\r\nexport const foo = () => {\r\n  throw new Error(\"newerr\");\r\n};\r\n","import { REQUEST_STATUS } from \"../../utils/constants\";\r\nimport {\r\n  REQUEST_FOOD_FAILURE,\r\n  REQUEST_FOOD_LOADING,\r\n  REQUEST_FOOD_SUCCESS,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  foodList: [],\r\n  request: {\r\n    status: REQUEST_STATUS.IDLE,\r\n    error: \"\",\r\n  },\r\n};\r\n\r\nexport const foodReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST_FOOD_LOADING:\r\n      return {\r\n        ...state,\r\n        request: {\r\n          ...state.request,\r\n          status: REQUEST_STATUS.LOADING,\r\n        },\r\n      };\r\n    case REQUEST_FOOD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        foodList: payload,\r\n        request: {\r\n          error: \"\",\r\n          status: REQUEST_STATUS.SUCCESS,\r\n        },\r\n      };\r\n    case REQUEST_FOOD_FAILURE:\r\n      return {\r\n        ...state,\r\n        request: {\r\n          error: payload,\r\n          status: REQUEST_STATUS.FAILURE,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport { messagesReducer } from \"./messages/reducer\";\r\nimport { profileReducer } from \"./profile/reducer\";\r\nimport { chatsReducer } from \"./chats/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { foodReducer } from \"./food/reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst config = {\r\n  key: \"gbMessenger\",\r\n  storage,\r\n  blacklist: [\"profile\", \"food\"],\r\n};\r\nconst persistedReducer = persistReducer(\r\n  config,\r\n  combineReducers({\r\n    chats: chatsReducer,\r\n    profile: profileReducer,\r\n    messages: messagesReducer,\r\n    food: foodReducer,\r\n  })\r\n);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\nexport const persistor = persistStore(store);\r\n","import { ListItem } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteChat } from \"../../store/chats/actions\";\r\nimport \"./chatItem.scss\";\r\n\r\nexport const ChatItem = ({ chat }) => {\r\n  const dispatch = useDispatch();\r\n  const handleDeleteClick = () => {\r\n    dispatch(deleteChat(chat.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem className=\"listItem\">\r\n        <NavLink\r\n          style={({ isActive }) => ({ color: isActive ? \"red\" : \"blue\" })}\r\n          to={`/chats/${chat.id}`}\r\n        >\r\n          {chat.name}\r\n        </NavLink>\r\n      </ListItem>\r\n      <button className=\"dlt_button\" onClick={handleDeleteClick}>\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","export const selectChats = (state) => state.chats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./chatsList.scss\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { ChatItem } from \"../ChatItem/ChatItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectChats } from \"../../store/chats/selectors\";\r\nimport { addChatWithFb, initChatsTracking } from \"../../store/chats/actions\";\r\n\r\nexport const ChatsList = () => {\r\n  const chatsList = useSelector(selectChats);\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(initChatsTracking());\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newId = uuidv4();\r\n    dispatch(addChatWithFb({ name: value, id: newId }));\r\n    setValue(\"\");\r\n  };\r\n  return (\r\n    <div className=\"chatsListSide\">\r\n      <h3>Chats list</h3>\r\n      <div className=\"chatsList\">\r\n        {chatsList.map((chat) => (\r\n          <div className=\"chatsList_item\" key={chat.id}>\r\n            <ChatItem chat={chat} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField value={value} onChange={handleChange} />\r\n        <button className=\"addChat\">Add chat</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const SignForm = ({ onSubmit, error, loading }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  const handleChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleChangePass = (e) => {\r\n    setPass(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(email, pass);\r\n    setEmail(\"\");\r\n    setPass(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"signForm\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"signInput\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={handleChangeEmail}\r\n        />\r\n        <input\r\n          className=\"signInput\"\r\n          type=\"password\"\r\n          value={pass}\r\n          onChange={handleChangePass}\r\n        />\r\n        <input className=\"signBtn\" type=\"submit\" disabled={loading} />\r\n      </form>\r\n      {error && <h4>{error}</h4>}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logIn } from \"../../services/firebase\";\r\nimport { SignForm } from \"../SignForm/SignForm\";\r\n\r\nexport const Home = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSignIn = async (email, pass) => {\r\n    setLoading(true);\r\n    try {\r\n      await logIn(email, pass);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>HOME</h3>\r\n      <SignForm onSubmit={handleSignIn} error={error} loading={loading} />\r\n      <Link to=\"/signup\">\r\n        <button className=\"dlt_button signout\">Sign Up</button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","export const selectName = (state) => state.profile.name;\r\nexport const selectAuth = (state) => state.profile.authed;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, connect, shallowEqual } from \"react-redux\";\r\nimport { changeName, toggleCheckbox } from \"../../store/profile/actions\";\r\nimport { selectName } from \"../../store/profile/selectors\";\r\nimport { onValue, set } from \"firebase/database\";\r\nimport { logOut, userRef } from \"../../services/firebase\";\r\n\r\nexport const Profile = ({ showName, setName, changeChecked }) => {\r\n  const name = useSelector(selectName, shallowEqual);\r\n  const [value, setValue] = useState(name);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(userRef, (snapshot) => {\r\n      const userData = snapshot.val();\r\n      setName(userData?.name || \"\");\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [setName]);\r\n\r\n  const handleChangeText = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    changeChecked();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    set(userRef, {\r\n      name: value,\r\n    });\r\n  };\r\n\r\n  const handleLogOutClick = async () => {\r\n    try {\r\n      await logOut();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Profile</h3>\r\n      <input type=\"checkbox\" checked={showName} onChange={handleChange} />\r\n      <span>Show name</span>\r\n      <form className=\"signForm\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"signInput\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={handleChangeText}\r\n        />\r\n        <input className=\"signBtn\" type=\"submit\" />\r\n      </form>\r\n      <button className=\"dlt_button signout\" onClick={handleLogOutClick}>\r\n        SIGN OUT\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.profile.name,\r\n  checkboxValue: state.profile.checkbox,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeChecked: () => dispatch(toggleCheckbox),\r\n  setName: (newName) => dispatch(changeName(newName)),\r\n});\r\n\r\n//const mapDispatchToProps2 = {\r\n// setName: changeName,\r\n//};\r\n\r\nexport const ConnectedProfile = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Profile);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { AUTHORS } from '../../utils/constants'\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send'\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport const Form = ({ onSend }) => {\r\n  const [value, setValue] = useState('');\r\n  const inputRef = useRef();\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSend({\r\n      author: AUTHORS.User,\r\n      text: value,\r\n      id: uuidv4()\r\n    })\r\n    inputRef.current?.focus();\r\n    setValue('');\r\n  }\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, []);\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField className=\"textField\" id=\"outlined-basic\" label='Your message' variant=\"outlined\" value={value} onChange={handleChange} inputRef={inputRef}/>\r\n      <Button className=\"btnSubmit\" variant=\"contained\" type=\"submit\" sx={{color: 'lightblue', m: 1}} endIcon={<SendIcon />}>\r\n  Send\r\n</Button>\r\n    </form>\r\n  )\r\n}","import React from \"react\";\r\n\r\nexport const MessagesList = ({ messages }) => (\r\n  <div className=\"messageWrap\">\r\n    {messages.map((message) => (\r\n      <div className=\"message\" key={message.id}>\r\n        <div className=\"message_author\">{message.author}</div>\r\n        <div className=\"textWrap\">\r\n          <div className=\"message_text\">{message.text}</div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport { Form } from \"../Form/Form\";\r\nimport { MessagesList } from \"../MessagesList/MessagesList\";\r\nimport { ChatsList } from \"../ChatsList/ChatsList\";\r\nimport { Navigate, useParams } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessageWithReply } from \"../../store/messages/actions\";\r\nimport \"./chats.scss\";\r\nimport { getChatMsgsListRefById } from \"../../services/firebase\";\r\nimport { push } from \"firebase/database\";\r\n\r\nfunction Chats({ msgs, sendMessage }) {\r\n  const { chatId } = useParams();\r\n\r\n  const handleSend = useCallback(\r\n    (nextMessage) => {\r\n      push(getChatMsgsListRefById(chatId), nextMessage);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  if (!msgs[chatId]) {\r\n    return <Navigate replace to=\"/chats\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <ChatsList />\r\n      <div>\r\n        <MessagesList messages={msgs[chatId]} />\r\n\r\n        <div className=\"form\">\r\n          <Form onSend={handleSend} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messages: state.messages,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  sendMessage: addMessageWithReply,\r\n};\r\n\r\nexport const ConnectedChats = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Chats);\r\n","import { REQUEST_STATUS } from \"../../utils/constants\";\r\n\r\nexport const selectFoodList = (state) => state.food.foodList;\r\nexport const selectFoodLoading = (state) =>\r\n  state.food.request.status === REQUEST_STATUS.LOADING;\r\nexport const selectFoodError = (state) => state.food.request.error;\r\n","import React from \"react\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFoodError,\r\n  selectFoodList,\r\n  selectFoodLoading,\r\n} from \"../../store/food/selectors\";\r\nimport { getFood } from \"../../store/food/actions\";\r\nimport \"./food.scss\";\r\n\r\nexport const Food = () => {\r\n  const dispatch = useDispatch();\r\n  const food = useSelector(selectFoodList);\r\n  const isLoading = useSelector(selectFoodLoading);\r\n  const error = useSelector(selectFoodError);\r\n\r\n  const requestFood = async () => {\r\n    dispatch(getFood());\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   requestFood();\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3>Breweries</h3>\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <button className=\"foodBtn\" onClick={requestFood}>\r\n            REQUEST\r\n          </button>\r\n          {!!error && <h4>ERROR: {error}</h4>}\r\n          <ul>\r\n            {food.map((fd) => (\r\n              <li className=\"foodList\" key={fd.id}>\r\n                {fd.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\nimport { selectAuth } from \"../../store/profile/selectors\";\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n  const authed = useSelector(selectAuth);\r\n\r\n  return authed ? children : <Navigate to=\"/\" replace />;\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate, Outlet } from \"react-router\";\r\nimport { selectAuth } from \"../../store/profile/selectors\";\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n  const authed = useSelector(selectAuth);\r\n\r\n  return !authed ? children : <Navigate to=\"/chats\" replace />;\r\n};\r\n\r\nexport const PublicOutlet = () => {\r\n  const authed = useSelector(selectAuth);\r\n\r\n  return !authed ? <Outlet /> : <Navigate to=\"/chats\" replace />;\r\n};\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../../services/firebase\";\r\nimport { SignForm } from \"../SignForm/SignForm\";\r\n\r\nexport const SignUp = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSignUp = async (email, pass) => {\r\n    setLoading(true);\r\n    try {\r\n      await signUp(email, pass);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SignForm onSubmit={handleSignUp} error={error} loading={loading} />\r\n      <Link to=\"/\">\r\n        <button className=\"dlt_button signout\">Sign In</button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Link, Routes, Route } from \"react-router-dom\";\r\nimport { ChatsList } from \"../ChatsList/ChatsList\";\r\nimport { Home } from \"../Home/Home\";\r\nimport { ConnectedProfile } from \"../Profile/Profile\";\r\nimport \"./router.scss\";\r\nimport { ConnectedChats } from \"../Chats/Chats\";\r\nimport { Food } from \"../Food/Food\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { onValue } from \"firebase/database\";\r\nimport { auth, messagesRef } from \"../../services/firebase\";\r\nimport { signIn, signOut } from \"../../store/profile/actions\";\r\nimport { PrivateRoute } from \"../PrivateRoute/PrivateRoute\";\r\nimport { PublicOutlet } from \"../PublicRoute/PublicRoute\";\r\nimport { SignUp } from \"../SignUp/SignUp\";\r\n\r\nexport const Router = () => {\r\n  const dispatch = useDispatch();\r\n  const [msgs, setMsgs] = useState({});\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(signIn());\r\n      } else {\r\n        dispatch(signOut());\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onValue(messagesRef, (snapshot) => {\r\n      const newMsgs = {};\r\n\r\n      snapshot.forEach((chatMsgsSnap) => {\r\n        newMsgs[chatMsgsSnap.key] = Object.values(\r\n          chatMsgsSnap.val().messagesList || {}\r\n        );\r\n      });\r\n\r\n      setMsgs(newMsgs);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <ul className=\"links\">\r\n        <li className=\"mainLinks\">\r\n          <Link className=\"eachLink\" to=\"/\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li className=\"mainLinks\">\r\n          <Link className=\"eachLink\" to=\"/chats\">\r\n            Chats\r\n          </Link>\r\n        </li>\r\n        <li className=\"mainLinks\">\r\n          <Link className=\"eachLink\" to=\"/profile\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n        <li className=\"mainLinks\">\r\n          <Link className=\"eachLink\" to=\"/food\">\r\n            Breweries\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<PublicOutlet />}>\r\n          <Route path=\"/\" element={<Home />} />\r\n        </Route>\r\n        <Route path=\"/signup\" element={<PublicOutlet />}>\r\n          <Route path=\"\" element={<SignUp />} />\r\n        </Route>\r\n        <Route path=\"chats\">\r\n          <Route\r\n            index\r\n            element={\r\n              <PrivateRoute>\r\n                <ChatsList />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\":chatId\"\r\n            element={\r\n              <PrivateRoute>\r\n                <ConnectedChats msgs={msgs} />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"profile\"\r\n          element={\r\n            <PrivateRoute>\r\n              <ConnectedProfile />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route path=\"food\" element={<Food />} />\r\n        <Route path=\"*\" element={<main>404 Not Found</main>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import './App.scss'\r\nimport { Provider } from \"react-redux\"\r\nimport { store, persistor } from \"./store\"\r\nimport { Router } from \"./components/Router/Router\"\r\nimport { PersistGate } from \"redux-persist/integration/react\"\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={ store }>\r\n        <PersistGate persistor={persistor} loading={<CircularProgress />}>\r\n       <main> \r\n       <Router />\r\n      </main>\r\n      </PersistGate>\r\n      </Provider>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}